(window.webpackJsonp=window.webpackJsonp||[]).push([[225],{459:function(e,t,n){"use strict";n.r(t);var r=n(4),i=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"continous-integration-deployment-und-delivery"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#continous-integration-deployment-und-delivery","aria-hidden":"true"}},[e._v("#")]),e._v(" Continous Integration, Deployment und Delivery")]),e._v(" "),n("p",[n("img",{attrs:{src:"/de/wiki/divers/development-integration-deployment.png",alt:"No alt text available"}})]),e._v(" "),n("h3",{attrs:{id:"continuous-delivery-cd"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#continuous-delivery-cd","aria-hidden":"true"}},[e._v("#")]),e._v(" Continuous Delivery (CD)")]),e._v(" "),n("p",[e._v("Bei der Continous Delivery müssen alle neuen Updates manuell auf den Produktionsserver geladen werden.")]),e._v(" "),n("p",[e._v("Führt man den delivery befehl aus, so bekommt man ein fertiges zip file / einen fertigen Ordner welchen man nur noch manuell auf den Server laden und je nach dem entpacken muss.")]),e._v(" "),n("h3",{attrs:{id:"continuous-deployment-cd"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#continuous-deployment-cd","aria-hidden":"true"}},[e._v("#")]),e._v(" Continuous Deployment (CD)")]),e._v(" "),n("p",[e._v("Bei dem Continuous Deployment werden alle Updates automatisch auf den Produktionsserver geladen.")]),e._v(" "),n("p",[e._v("Führt man den deployment befehl aus, so wird ein fertiges zip file / fertiger Ordner erstellt, automatisch auf den Server gelasen und entpackt.")]),e._v(" "),n("h3",{attrs:{id:"continuous-integration-ci"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#continuous-integration-ci","aria-hidden":"true"}},[e._v("#")]),e._v(" Continuous Integration (CI)")]),e._v(" "),n("p",[e._v("Continuous Integration zeichnet sich dadurch aus, dass die Software bei jedem deploy durch automatische scripts getested wird. Den "),n("a",{attrs:{href:"/de/wiki/programmiersprachen/programmiertipps#lesbarkeit"}},[e._v("Programmierstil")]),e._v(" kann man beispielsweise mit "),n("a",{attrs:{href:"https://styleci.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("StyleCI"),n("OutboundLink")],1),e._v(" überprüfen lassen. Die Fehleranfälligkeit und Struktur des Codes lässt sich mit "),n("a",{attrs:{href:"https://scrutinizer-ci.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ScrutinizerCI"),n("OutboundLink")],1),e._v(" überprüfen. Diese beiden CIs lassen jeweils automatisch nach jedem Push auf "),n("a",{attrs:{href:"https://www.github.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub"),n("OutboundLink")],1),e._v(" den Code durch einen Test laufen und melden anschliessend Fehler.")]),e._v(" "),n("p",[e._v("Neben diesen beiden CIs gibt es auch noch "),n("a",{attrs:{href:"https://travis-ci.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("TravisCI"),n("OutboundLink")],1),e._v(" und "),n("a",{attrs:{href:"https://jenkins.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jenkins"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("img",{attrs:{src:"/de/wiki/divers/style-ci.png",alt:"No alt text available"}}),n("img",{attrs:{src:"/de/wiki/divers/scrudinizer-ci.png",alt:"No alt text available"}}),n("img",{attrs:{src:"/de/wiki/divers/travis-ci.png",alt:"No alt text available"}}),n("img",{attrs:{src:"/de/wiki/divers/jenkins-ci.png",alt:"No alt text available"}})])])}),[],!1,null,null,null);t.default=i.exports}}]);