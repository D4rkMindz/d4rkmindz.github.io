(window.webpackJsonp=window.webpackJsonp||[]).push([[341],{281:function(e,t,n){"use strict";n.r(t);var s=n(4),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"fake"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fake","aria-hidden":"true"}},[e._v("#")]),e._v(" Fake")]),e._v(" "),n("p",[e._v('"Fakes are objects that have working implementations, but not same as production one. Usually they take some shortcut and have simplified version of production code."')]),e._v(" "),n("p",[e._v("//Fakes sind Objekte, welche funktionierende Implementationen haben, jedoch nicht die selben wie die (Objekte) produktiven. Normalerweise sind diese verkürzt und bestehen aus einer vereinfachte Version des produktiven Codes.")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://dev.to/milipski/test-doubles---fakes-mocks-and-stubs",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dev.to"),n("OutboundLink")],1),e._v("//")]),e._v(" "),n("p",[e._v("Fakes können Datenbanken durch In-Memory Datenbanken ersetzen. Dabei wird die Originale Datenbank nicht verändert, jedoch ist es möglich Daten zu speichern (bsp. für den Test eines Logins). Auch könnte man eine Payment-System mittels eines Fakes, welcher immer einen Erfolg zurückliefert, testen.")]),e._v(" "),n("p",[n("img",{attrs:{src:"/de/wiki/programmiersprachen/testing/phpunit/unit-testing-fake.png",alt:"No alt text available"}})]),e._v(" "),n("p",[e._v("(DAO = Data Access Object)")])])}),[],!1,null,null,null);t.default=a.exports}}]);