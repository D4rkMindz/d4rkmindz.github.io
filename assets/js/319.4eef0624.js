(window.webpackJsonp=window.webpackJsonp||[]).push([[319],{553:function(e,r,n){"use strict";n.r(r);var i=n(4),s=Object(i.a)({},(function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"solid"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#solid","aria-hidden":"true"}},[e._v("#")]),e._v(" SOLID")]),e._v(" "),n("p",[e._v("Ein sehr informativer Artikel über dieses Thema: "),n("a",{attrs:{href:"/de/http/**dev.to/theodesp/understanding-solid-principles-dependency-injection"}},[e._v("hier")])]),e._v(" "),n("p",[e._v("| "),n("strong",[e._v("S")]),n("a",{attrs:{href:"/de/wiki/programmiersprachen/programmiertipps/single-responsibility-principle"}},[e._v("ingle responsibility principle")]),e._v(" | Eine Aufgabe pro Klasse. |\n| "),n("strong",[e._v("O")]),n("a",{attrs:{href:"/de/wiki/programmiersprachen/php/open-closed-principle"}},[e._v("pen/closed principle")]),e._v(" | Klassen sind offen für Erweiterungen und geschlossen für Veränderungen. |\n| "),n("strong",[e._v("L")]),n("a",{attrs:{href:"/de/wiki/programmiersprachen/php/liskov-substitution-principle"}},[e._v("iskov substitution principle")]),e._v(" | Objekte in einem Programm sollten mit einer Instanz dieses Objektes ersetzt werden. |\n| "),n("strong",[e._v("I")]),n("a",{attrs:{href:"/de/wiki/programmiersprachen/php/interface-segregation-principle"}},[e._v("nterface segregation principle")]),e._v(" | Mehrere Client-Spezifische Interfaces sind besser, als ein generelles Interface. |\n| "),n("strong",[e._v("D")]),n("a",{attrs:{href:"/de/wiki/programmiersprachen/php/dependency-inversion-principle"}},[e._v("ependency inversion principle")]),e._v(" | Man soll die Abhängigkeit von Modulen umkehren. |")])])}),[],!1,null,null,null);r.default=s.exports}}]);