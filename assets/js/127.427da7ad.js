(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{360:function(e,n,r){"use strict";r.r(n);var i=r(4),t=Object(i.a)({},(function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"mehr-sichereit-mit-kopfchen"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mehr-sichereit-mit-kopfchen","aria-hidden":"true"}},[e._v("#")]),e._v(" Mehr Sichereit mit Köpfchen")]),e._v(" "),r("p",[e._v("Der Header ist ein Teil eines "),r("a",{attrs:{href:"/de/wiki/divers/http-request"}},[e._v("HTTP-Requestes")]),e._v(". Durch einen Header kann man gewisse Aktionen autorisieren oder verbieten. Es gibt viele, verschieden Optionen. Ein paar davon sind sogar noch sehr experimentell. Um eine sichere Verwendung zu garantieren empfiehlt sich die Benutzung der Webseite "),r("a",{attrs:{href:"http://www.caniuse.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("CanIUse.com"),r("OutboundLink")],1)]),e._v(" "),r("h4",{attrs:{id:"same-origin-policy"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#same-origin-policy","aria-hidden":"true"}},[e._v("#")]),e._v(" Same Origin Policy")]),e._v(" "),r("p",[e._v("Eine "),r("a",{attrs:{href:"https://lernjournal.d4rkmindz.ch/doku.php/wiki:url",target:"_blank",rel:"noopener noreferrer"}},[e._v("Domain"),r("OutboundLink")],1),e._v(" ist wie folgt aufgebaut:")]),e._v(" "),r("pre",[r("code",[e._v("https:                                   Schema\n      //example.org                      Domain\n                   :8080                 Port\n                        /path/file.html  Files\n")])]),e._v(" "),r("p",[e._v("Die Same Origin Policy sollte grundsätzlich nur Dateien von einer Quelle (Domain) zulassen. So verhindert man das Laden von schadvollen Dateien. Jedoch ist dies nicht mehr sinnvoll durchsetztbar. Inzwischen kann man ja z. B. jQuery oder Schriftarten von sogenannten Content Delivery Networks (CDN) beziehen.")]),e._v(" "),r("h4",{attrs:{id:"x-frameoptions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#x-frameoptions","aria-hidden":"true"}},[e._v("#")]),e._v(" X-FrameOptions")]),e._v(" "),r("p",[e._v("Irgendwann kamen ein paar kreative Köpfe auf die Idee, eine Webseite in ein "),r("iframe",[e._v("-Tag einzubetten und auf den Eingabefeldern der zu hackenden Webseite ein weiteres Eingabefeld hinzuzufügen. So bekam man die Daten, welche eigentlich in das andere Feld hätten geschrieben werden sollen. Eine solche Attacke kann bei Banken sehr verheerend sein. Um dies zu unterbinden wurde der X-FrameOptions Header entwickelt. Dieser hat drei mögliche Werte: DENY, SAMEORIGIN, ALLOW-FROM.")])]),e._v(" "),r("h4",{attrs:{id:"x-contentsniff"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#x-contentsniff","aria-hidden":"true"}},[e._v("#")]),e._v(" X-ContentSniff")]),e._v(" "),r("p",[e._v("Dieser Header hat lediglich eine Option: nosniff. Browser probieren oft den Inhalt aufgrund vorheriger Analysen zu erraten. Da kann es Mal passieren, dass die vom Server definierten MIME-Typen ignoriert werden. Sehr oft passiert dies bei dem Typ **. Ganz verheerend ist es dann, wenn ein Browser ein Script dank eines geschickt platzierten "),r("script")])])}),[],!1,null,null,null);n.default=t.exports}}]);