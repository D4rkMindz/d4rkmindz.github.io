(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{305:function(e,n,s){"use strict";s.r(n);var a=s(4),t=Object(a.a)({},(function(){var e=this,n=e.$createElement,s=e._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"mehr-als-eine-java-alternative"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mehr-als-eine-java-alternative","aria-hidden":"true"}},[e._v("#")]),e._v(" Mehr als eine Java-Alternative")]),e._v(" "),s("p",[e._v("Kotlin ist eine Sprache, welche sich in Java VM, JavaScript und seit neustem auch nativen Code transpilieren l√§sst. Die Transpilierung zu "),s("a",{attrs:{href:"http://webassembly.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebAssembly"),s("OutboundLink")],1),e._v(" ist noch geplant. So kann man beispielsweise wie in TypeScript, stark typisiertes JavaScript in Kotlin entwickeln.")]),e._v(" "),s("p",[e._v("Dazu muss man den "),s("a",{attrs:{href:"https://kotlinlang.org/docs/tutorials/command-line.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Kompiler"),s("OutboundLink")],1),e._v(" installieren. Man k√∂nnte dann beispielsweise ein Projekt machen, welches auf einem PHP-Server l√§uft und das Frontend-JavaScript in Kotlin geschrieben ist.")]),e._v(" "),s("h4",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation","aria-hidden":"true"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),s("p",[e._v("Zum installieren des Kompilers ben√∂tigt man mindestens Java JRE 1.8.x. Jedoch empfiehlt sich hier die JDK-Version zu verwenden. Anschliessend l√§dt man den "),s("a",{attrs:{href:"https://github.com/JetBrains/kotlin/releases/latest",target:"_blank",rel:"noopener noreferrer"}},[e._v("aktuellsten Kompiler"),s("OutboundLink")],1),e._v('  herunter. In der ZIP-Datei befindet sich der Ordner "kotlinc" mit allen ben√∂tigten Bibliotheken und Binaries. Dieser Ordner sollte in ein gut erreichbares Verzeichnis entpackt werden (bsp. "D:\ndev\nkotlin"). Die f√ºr die Transpilierung von JavaScript verantwortliche Batch-Datei ist die Datei "konlinc-js.bat".')]),e._v(" "),s("h4",{attrs:{id:"kompilieren"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kompilieren","aria-hidden":"true"}},[e._v("#")]),e._v(" Kompilieren")]),e._v(" "),s("p",[e._v('Bevor jedoch das JavaScript ausgeliefert werden kann, muss man dies mit dem Kotlin JavaScript Kompiler transpilieren. Dies kann man entweder mit einer Batch-Datei machen oder mittels einer "Run Configuration" in IntelliJ IDEA (oder anderen Produkten von JetBrains).\nDie Batch-Datei hier sagt dem Kompiler, dass er die Version ausgeben soll. Ausserdem soll er jeglichen Output auch ausgeben (engl. verbose, gespr√§chig). Zus√§tzlich soll eine Source Map erstellt werden. Das ganze soll dann im Output-Ordner laden. Das letzte Argument ist, welche Dateien gelesen werden sollen. Hier sind √ºbrigens Wildcard-Instruktionen erlaubt, was vieles einfacher macht.')]),e._v(" "),s("p",[e._v('Das Zeichen "^" l√§sst einen Zeilenumbruch in der Datei zu, ohne diesen in den Command zu √ºbertragen. Dies erm√∂glicht eine sch√∂ne Formatierung. Jedoch muss man, damit der Befehl korrekt ausgef√ºhrt wird, vor dem "^" ein Leerzeichen einf√ºgen.')]),e._v(" "),s("div",{staticClass:"language-bat line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@echo off\nset compiler=D:\ndev\nkotlin\nbin\nset project=C:\nxampp\nhtdocs\nkotlin-test\n\ndel %project%\njs\n*.js\ndel %project%\njs\n*.map\n\n%compiler%\nkotlinc-js.bat |\n-version |\n| -------- |\n-verbose |\n-source-map |\n| ----------- |\n-output %project%\njs\nsome-name.js ^\n%project%\nkotlin\n*.kt\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br")])]),s("h4",{attrs:{id:"code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#code","aria-hidden":"true"}},[e._v("#")]),e._v(" Code")]),e._v(" "),s("p",[e._v("Kotlin ist Java sehr √§hnlich. Jedoch eben nur √§hnlich. Der Einstieg ist wie in Java √ºber eine statische Methode des Objektes, sondern nur eine simple, globale ''main()'' Funktion.")]),e._v(" "),s("p",[e._v('Um nun "Hello World" in der JavaScript-Konsole des Browsers auszugeben muss man folgenden Code schreiben.')]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('fun main(args: Array<String>) \n{\n  println("Hello World")\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("Ein Problem, welches durch die starke Typisierung entsteht ist, dass das JavaScript Laufzeitelement "),s("a",{attrs:{href:"https://wiki.selfhtml.org/wiki/JavaScript/DOM/Document",target:"_blank",rel:"noopener noreferrer"}},[e._v("document"),s("OutboundLink")],1),e._v(" oder "),s("a",{attrs:{href:"https://wiki.selfhtml.org/wiki/JavaScript/Window",target:"_blank",rel:"noopener noreferrer"}},[e._v("window"),s("OutboundLink")],1),e._v(' zur Zeit der Kompilierung nicht existieren. Um dieses Problem zu l√∂sen gibt es das Schl√ºsselwort "external", welches man vor die Definition der globalen Konstante notiert.')]),e._v(" "),s("p",[e._v('Document, sowie Window sind elemente des Packages "org.w3c.dom"')]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('import org.w3c.dom.*\n\nexternal val window: Window\nexernal val document: Document\n\nfun main(args: Array<String>)\n{\n  val message = document.getElementById("some_id") as HTMLElement\n  message.innerText = "I found you via Kotlin üòè"\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("h3",{attrs:{id:"fazit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fazit","aria-hidden":"true"}},[e._v("#")]),e._v(" Fazit")]),e._v(" "),s("p",[e._v("Wenn man JavaScript haben m√∂chte, jedoch auf die schwache Typisierung (und weitere Nachteile) verzichten m√∂chte, dann ist Kotlin sicher eine gute Alternative. Ausserdem ist es sicher Vorteilhaft, dass Kotlin sich in mehrere Sprachen transpilieren l√§sst.")])])}),[],!1,null,null,null);n.default=t.exports}}]);