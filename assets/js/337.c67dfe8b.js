(window.webpackJsonp=window.webpackJsonp||[]).push([[337],{285:function(e,n,r){"use strict";r.r(n);var t=r(4),s=Object(t.a)({},(function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"requestverlauf"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#requestverlauf","aria-hidden":"true"}},[e._v("#")]),e._v(" Requestverlauf")]),e._v(" "),r("p",[e._v("Ein "),r("a",{attrs:{href:"/de/wiki/divers/http-request"}},[e._v("HTTP-Request")]),e._v(" wird von einem Browser ausgelöst und an einen Server gesendet. Dieser Request durchläuft verschiedene Elemente.")]),e._v(" "),r("h3",{attrs:{id:"request"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#request","aria-hidden":"true"}},[e._v("#")]),e._v(" Request")]),e._v(" "),r("p",[e._v("| Pos. |\n| ---- | Handler ^\n| 1    | Browser |\n| 2    | Apache |\n| 3    | PHP |\n| 4    | Frontcontroller |\n| 5    | Bootstrapping(Config, "),r("a",{attrs:{href:"https://lernjournal.d4rkmindz.ch/doku.php/installationen:composer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Composer"),r("OutboundLink")],1),e._v(", .env Files) |\n| 6    | Routing & Dispatching |\n| 7    | Controlleraction |\n| 8    | Service |\n| 9    | Repository |\n| 10   | Table (oder API, etc.)|\n| 11   | Querybuilder |\n| 12   | PDO |\n| 13   | MySQL (DBMS) |\n| 13.5 | Engine (bsp. InnoDB) |\n| 14   | Speichermedium (Festplatte, RAM) |\nEin Request wird von einem "),r("strong",[e._v("Browser")]),e._v(" zum Webserver ("),r("strong",[e._v("Apache")]),e._v(") gesendet. Dort startet der Request "),r("strong",[e._v("PHP")]),e._v(". Der "),r("strong",[r("a",{attrs:{href:"https://de.wikipedia.org/wiki/Front_Controller",target:"_blank",rel:"noopener noreferrer"}},[e._v("FrontController"),r("OutboundLink")],1)]),e._v(" übernimmt den Request und startet das "),r("strong",[e._v("Bootstrapping")]),e._v(". Danach wird über den "),r("strong",[e._v("Router")]),e._v(" die Route ermittelt und an den "),r("strong",[e._v("Dispatcher")]),e._v(" weitergeleitet, welcher mit diesen Informationen eine "),r("strong",[e._v("Controlleraction")]),e._v(" startet. Von dieser Controlleraction aus wird ein "),r("strong",[e._v("Service")]),e._v(" gestartet, welche sich die benötigten Daten aus einem "),r("strong",[e._v("Repository")]),e._v(" holt. Das Repository greift auf eine "),r("strong",[e._v("Datenbank")]),e._v(" (oder API, etc) zu, welche mittels "),r("strong",[e._v("Querybuilder")]),e._v(" und "),r("strong",[e._v("PDO")]),e._v(" Daten aus einer "),r("strong",[e._v("MySQL")]),e._v(" Datenbank holt. Die Datenbank wird mit einer "),r("strong",[e._v("Engine")]),e._v(" betrieben, welche die Daten aus vordefinierten "),r("strong",[e._v("Speichermedien")]),e._v(" holt.")]),e._v(" "),r("h3",{attrs:{id:"response"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#response","aria-hidden":"true"}},[e._v("#")]),e._v(" Response")]),e._v(" "),r("p",[e._v("| Pos. |\n| ---- | Handler ^\n| 14 | Speichermedium (Festplatte, RAM)  |\n| 13.5   | Engine (bsp. InnoDB) |\n| 13   | MySQL (DBMS) |\n| 12   | PDO |\n| 11   | Querybuilder |\n| 10    | Daten als Array bekommen |\n| 9    | Mapping in Entity (Hydrator) |\n| 8    | Service (Businesslogik) |\n| 6    | Controlleraction -> View (Rendering, Template) |\n| 5    | Response erstellen & senden |\n| 4    | (Bootstrapping) |\n| 3    | Froncontroller |\n| 3    | PHP |\n| 2    | Apache|\n| 1    | Browser |\nDer Response bekommt die Daten der "),r("strong",[e._v("Festplatte")]),e._v(" von der "),r("strong",[e._v("Engine")]),e._v(", welche von dem "),r("router-link",{attrs:{to:"/de/wiki/programmiersprachen/datenbanken/#datenbank_modelle"}},[e._v("RDBMS")]),e._v(" "),r("strong",[e._v("MySQL")]),e._v(" verwaltet werden. Der "),r("strong",[e._v("PDO")]),e._v('-"Treiber" retourniert die Daten an den '),r("strong",[e._v("Querybuilder")]),e._v(", welche als Array in eine "),r("strong",[e._v("Entity")]),e._v(" gemappt werden (mittels Hydrator). Die "),r("strong",[e._v("Businesslogik")]),e._v(" veratbeitet danach diese Daten und übergibt sie der Controlleraction, welche diese danach der "),r("strong",[e._v("View")]),e._v(" übergibt. In der View werden die Daten in ein Template gerendert. Mit der gerenderten View wird ein "),r("strong",[e._v("Response erstellt")]),e._v(", welcher über den Frontcontroller zu "),r("strong",[e._v("PHP")]),e._v(" und schliesslich zu "),r("strong",[e._v("Apache")]),e._v(" weitergeleitet wird. Apache sendet danach den Response über das Internet zurück an den "),r("strong",[e._v("Browser")]),e._v(".")],1)])}),[],!1,null,null,null);n.default=s.exports}}]);