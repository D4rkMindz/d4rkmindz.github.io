(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{371:function(e,n,s){"use strict";s.r(n);var a=s(4),t=Object(a.a)({},(function(){var e=this,n=e.$createElement,s=e._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"konkurrenz-zu-rest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#konkurrenz-zu-rest","aria-hidden":"true"}},[e._v("#")]),e._v(" Konkurrenz zu REST")]),e._v(" "),s("p",[s("a",{attrs:{href:"http://graphql.org/learn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GraphQL"),s("OutboundLink")],1),e._v(" ist nicht wie viele denken eine Anfragesprache für eine Datenbank. Ebenso wenig handelt es sich um ein "),s("a",{attrs:{href:"/de/wiki/programmiersprachen/programmiertipps/orm"}},[e._v("ORM")]),e._v(". Es handelt sich vielmehr um eine neue Möglichkeit Webservice-APIs zu realisieren. Somit steht GraphQL in direkter Konkurrenz zu "),s("a",{attrs:{href:"/de/wiki/divers/api/rest"}},[e._v("REST")]),e._v(".")]),e._v(" "),s("p",[e._v("Bei REST ist jedoch das Problem, dass man teilweise mehrere Datensätze gleichzeitig abrufen muss. Dies führt zu unnötigen Zusatzdaten und enormen Netzwerktraffic sowie einer hohen Serverauslastung.")]),e._v(" "),s("p",[e._v('Um unnötige Felder zu vermeiden hat man angefangen, die gewünschten Felder via Parameter zu definieren. Jedoch für dies, vor allem bei komplexen Datenmodellen, zu sehr vielen Parametern und "Switches", welche dann wieder die Fehlerquellen erhöhen und die Testbarkeit erschweren.')]),e._v(" "),s("p",[e._v("Das Modell der Verwendung von Parametern für die Ausgabe von Datenfeldern ist dem Modell von GraphQL sehr ähnlich.")]),e._v(" "),s("h3",{attrs:{id:"graphql-typen"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#graphql-typen","aria-hidden":"true"}},[e._v("#")]),e._v(" GraphQL Typen")]),e._v(" "),s("p",[e._v("Die verschiedenen Formen von Daten (Repräsentationen) werden durch Typsysteme beschrieben. GraphQL definiert hier ein Schema, welches die Form jeglicher Daten und sämtlicher, erlaubter Operationen beinhaltet.")]),e._v(" "),s("p",[e._v("GraphQL erkennt Objekte und Skalare Datentypen. Skalare Werte sind Int, Float, String, Boolean und ID. Eine ID wird zum Schluss zu einem String serialisiert, jedoch wird der Typ als nicht Menschenlesbar definiert.")]),e._v(" "),s("p",[e._v("Werte lassen sich wie folgt definieren:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// Nur Werte AUTHOR, ADMIN, GUEST zugelassen\nenum Role {\n  AUTHOR,\n  ADMIN,\n  GUEST\n}\n\n// Definition eines Objektes\ntype User {\n  id: ID, // type ID\n  displayName: String, // type String\n}\n\nmeinWert: String // darf null sein\nmeinWert2: String! // darf nicht null sein\n\nmeinFeld: [String] // Liste (Array) von Strings\nmeinFeld2: [User] // Liste (Array) des Objekttypes 'User'\n\nmeinFeld3: [User!] // Nullable Liste (Array) des Objekttypes 'User'. 'User' ist nicht nullable\nmeinFeld4: [User]! // Nicht nullable Liste (Array) des nullablen Objekttypes 'User'\nmeinFeld5: [User!]! // Die Liste (Array) des Objekttypes 'User' -  Beide nicht nullable\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br")])]),s("p",[e._v("Das GraphQL-Schema besteht bis heute aus drei Wurzelobjekten von Query-Operationen.")]),e._v(" "),s("h5",{attrs:{id:"query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#query","aria-hidden":"true"}},[e._v("#")]),e._v(" Query")]),e._v(" "),s("p",[e._v("Dies ist das Wurzel-Objekt von Query Operationen. Somit definiert das Query-Objekt für das Anfrage-Wurzelobjekt.")]),e._v(" "),s("h5",{attrs:{id:"mutation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mutation","aria-hidden":"true"}},[e._v("#")]),e._v(" Mutation")]),e._v(" "),s("p",[e._v("Die Mutation-Operation ist für die Bearbeitung von Daten zuständig. Wenn man Daten verändern möchte, muss man dies über die Mutation Operation machen.")]),e._v(" "),s("h5",{attrs:{id:"subscription"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#subscription","aria-hidden":"true"}},[e._v("#")]),e._v(" Subscription")]),e._v(" "),s("p",[e._v("Eine Subscription-Operation benachrichtigt den Benutzer (Push-Benachrichtigun) bei einem Event.")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("schema {\n  query: Query,\n  mutation: Mutation,\n  subscription: Subscription,\n}\n\ntype User {\n  id: ID!,\n  displayName: String,\n  roles: [String!]!,\n  deputy: User,\n}\n\ntype Query {\n  users: [User!]!,\n}\n\ntype Mutation {\n  createUser(user: User) : User,\n}\n\n...\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br")])]),s("h3",{attrs:{id:"abfragen"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abfragen","aria-hidden":"true"}},[e._v("#")]),e._v(" Abfragen")]),e._v(" "),s("p",[e._v("Eine Abfrage kann man mit diversen Parametern beschränken. Folgende Anfragen kann man beispielsweise auf das vorher erstellte Schema machen.")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('# Benutzer mit der ID hans abfragen\n{\n  user(id: "hans") {\n    id\n    displayName\n  }\n}\n# Admin Benutzer abfragenn\n{\n  users(role: "admin") {\n    id\n    displayName\n  }\n}\n# Maximal fünf Benutzer, beginne bei dem 10ten Benutzer\n{\n  users(limit: 5, start: 10) {\n    id\n    displayName\n  }\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br")])]),s("h3",{attrs:{id:"mutationen"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mutationen","aria-hidden":"true"}},[e._v("#")]),e._v(" Mutationen")]),e._v(" "),s("p",[e._v("Im Gegensatz zu Queryoperationen sind Muationsoperationen nicht auf das Lesen von Daten beschränkt. Wenn man einen Vergleich zu REST ziehen würde, dann würde die Queryoperation einem "),s("a",{attrs:{href:"/de/wiki/divers/http-request#get-request"}},[e._v("GET")]),e._v(" und die Mutationsoperation einem "),s("a",{attrs:{href:"/de/wiki/divers/http-request#post-request"}},[e._v("POST")]),e._v("/"),s("a",{attrs:{href:"/de/wiki/divers/http-request#put-request"}},[e._v("PUT")]),e._v(" oder sogar "),s("a",{attrs:{href:"/de/wiki/divers/http-request#delete-request"}},[e._v("DELETE")]),e._v(" entsprechen. Da sich die Syntax bei der Anfrage auf eine Mutation klar von einer Queryoperation unterscheidet weiss der Server die entsprechende Operation zuzuweisen.")]),e._v(" "),s("p",[e._v("Trotz der hohen Ähnlichkeit der Syntax zu Methodensignaturen ist diese jedoch keineswegs eine. Das GraphQL-Typensystem behandelt eine Mutation als Feld mit Feldparametern.")]),e._v(" "),s("h3",{attrs:{id:"subscriptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#subscriptions","aria-hidden":"true"}},[e._v("#")]),e._v(" Subscriptions")]),e._v(" "),s("p",[e._v("Eine Subscription ist ein Stream, über welchen der Server Push-Benachrichtigungen übermittelt. Diese Verwendung ist in GraphQL noch sehr neu.")]),e._v(" "),s("p",[e._v("Ein Beispiel für eine Subscription:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("subscription ChatMessages {\n  newMessage(roomId: 123)\n  {\n    sender\n    text\n  }\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("p",[e._v("Eine Antwort des Servers im Subscription Stream sähe dann wie folgt aus:")]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"data"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"newMessage"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"sender"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Paul"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"message"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Hallo!"')]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("h3",{attrs:{id:"implementierung-in-nodejs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#implementierung-in-nodejs","aria-hidden":"true"}},[e._v("#")]),e._v(" Implementierung in NodeJS")]),e._v(" "),s("p",[e._v("In NodeJS ist GraphQL.JS als ''graphql'' verfügbar. Das erste Objekt ist GraphQL, das zweite ist ein Objekt zur Bildung von GraphQL Schemas. Mit dem aufrufen der ''buildSchema''-Methode weiss der Server exakt, welche Felder und Typen es geben kann. Damit ist die Validierung der Anfragen erstellt.")]),e._v(" "),s("p",[e._v("Wenn man Funktionen für jedes Wurzelobjekt vom Typ Query erstellen möchte braucht man dazu das ''resolveRoot''-Objekt.")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var {graphql, buildSchema} = require('graphql');\n\nvar schema = buildSchema('\ntype Query {\n  hello: String\n}\n');\n\nvar resolveRoot = {\n  hello: () => 'Hello World',\n};\n\nvar query = '{hello}';\n\nlet response = await graphql(schema, query, resolveRoot);\nconsole.log(response); // => {data: {hello: 'Hello World'}}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br")])]),s("h3",{attrs:{id:"implementierung-in-c"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#implementierung-in-c","aria-hidden":"true"}},[e._v("#")]),e._v(" Implementierung in C#")]),e._v(" "),s("p",[e._v("Für .NET wurde ebenfalls eine Library entwickelt. Diese heisst "),s("a",{attrs:{href:"https://github.com/graphql-dotnet/graphql-dotnet",target:"_blank",rel:"noopener noreferrer"}},[e._v("GraphQL for .NET"),s("OutboundLink")],1),e._v('. Hier ein kleines Beispiel für die Ausgabe von Hello World mit einem Query auf "hello"')]),e._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" schema "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" Schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("For")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('@"\n  type Query {\n    hello: String\n  }\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" root "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" Hello "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Hello World!"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Query "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"{ hello }"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Root "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\nConsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("WriteLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br")])]),s("h3",{attrs:{id:"fazit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fazit","aria-hidden":"true"}},[e._v("#")]),e._v(" Fazit")]),e._v(" "),s("p",[e._v("GraphQL ist durchaus eine Alternative zu REST. Jedoch habe ich dies noch nicht ausprobiert. Nach diesem Artikel jedoch denke ich, dass ich es sicher irgendeinmal gerne ausprobieren möchte.")])])}),[],!1,null,null,null);n.default=t.exports}}]);